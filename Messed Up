//Game EightBall
//Simulates a game EightBall where players wait
// Author is Moses Arocha

#include <iostream>
#include <windows.h>
#include <string>
#include <limits>
#include <algorithm>
#include <stdio.h>
#include <ctype.h>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <sstream>

using namespace std;

int PlayerCount;
int TotalPlayerCount;

WORD GetConsoleTextAttribute (HANDLE hCon)
{
  CONSOLE_SCREEN_BUFFER_INFO con_info;
  GetConsoleScreenBufferInfo(hCon, &con_info);
  return con_info.wAttributes;
}

HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
const int saved_colors = GetConsoleTextAttribute(hConsole);
// there are two classes within this code, maintain them.


class EightBall
{
public:
	
	int* intOnPeople();
    EightBall();
    ~EightBall();
    void AddPlayer();
    void RemovePlayer();
	void PlayGame();
	void Start();
    void Clear();
    

};

EightBall::~EightBall()
{
    Clear();// simply calls the clear function, removing all EightBall objects from the list, freeing the dynamic memory
			 // This delete, calls clear function, which calls remove function
}

void EightBall::Clear() // removes all the players from the EightBall
{
    //while ( )
		   
		   
		   
		   
		   //!= 0) // if the list isn't empty it doesn't enter and skips over
		{	
			RemovePlayer(); //calls the remove function
		}
}

void EightBall::RemovePlayer()//removes the EightBall's object, FREES THE MEMORY
{
	// if M_PHEAD IS 0, THE EightBall IS EMPTY AND THE FUNCTION STATES IT IS EMPTY.
	// removes the EightBall at the head of the line

}

void EightBall::AddPlayer()// creates a new EightBall, but ADDS TO END OF LIST
{
    //create a new EightBall node, and asks for the users input, and instantiates a new EightBall object on the Heap
    SetConsoleTextAttribute(hConsole, 0x0D); // the color magenta is used

	string suffix;

	if ( PlayerCount == 1 || PlayerCount == 21 || PlayerCount == 31 )
	{
		 suffix = "st";
	}	
	else if ( PlayerCount == 2 || PlayerCount == 22 || PlayerCount == 32)
	{
		 suffix = "nd";
	}
	else
	{
		 suffix = "rd";
	}

	cout << "\n  What Is The Name Of The " << PlayerCount << suffix << " EightBall? : ";
    string name;
    getline(cin, name);

}

void EightBall::Start()
{
	if (TotalPlayerCount < 4)
	{
		cout << " \n\t Four Players Must Play. Insert Four Names Please. \n";
		TotalPlayerCount = 4;
	int* pPlayer = new int(1);
	}

	for ( int i = 0; i < TotalPlayerCount; ++i)
	{
		PlayerCount++;
		int* pPeople2 = intOnPeople();
	}
	
}

void EightBall::PlayGame()
{
	int PassEightBall = 1;
	string Question;
	string ContinuePlay = "y";
	int randomNumber;

	srand(static_cast<unsigned int>(time(0)));  //seed random number generator
	

	const string Answers[20] = { " I do not have an answer.\n\n", " I advise you not do so.\n\n",
								 " It seems the Timing is right.\n", " I would state yes! \n",
								 " I see great things In your future. \n", " Let's ask another question, later. \n",
								 " My fortunes tell me to tell you hurry up, it's a yes! \n", "You will leave a Legacy! \n",
								 " I see good things, I think you will fine.\n", " It seems that you will be in Caleb's Basement soon. \n",
								 " I do not see a future in this, please stop. \n", " I couldn't say yes anymore, let's do it! \n",
								 " You will succeed, and will have a fortune. \n",  " It seems this is out of my reach.\n",
								 " I do not know, ask later. I do not care.\n", " Hmm, who knows? Because I don't.\n",
								 " Quit it, You are horrible. Stop!\n", " I hope you have a great day, it's a yes!\n",
								 " Defintely, a yes, get too it soon!\n", " I would state the answer is up to you, I say most likely.\n" };


	while (ContinuePlay == "y" || ContinuePlay == "Y")
	{
		randomNumber = rand() % 19 + 0;         // random number between 0 and 20
		SetConsoleTextAttribute(hConsole, 0x0E);
		cout << "\n Please Pass The Magic EightBall To EightBall " << PassEightBall << ".....\n";
		Sleep(2000);

		cout << "\n Sounds Great. EightBall " << PassEightBall << " What Is Your Question? ";
		getline(cin, Question);
		cin.ignore();
		++PassEightBall;

		cout << "\n\n Response: ";
		SetConsoleTextAttribute(hConsole, 0x07);
		cout << Answers[randomNumber];


			if (PassEightBall == TotalPlayerCount+1)
			{
				SetConsoleTextAttribute(hConsole, 0x0C); // Sets The Color To Gray
				break;
			}

	}
}

int main()
{
    EightBall myEightBall; // creates a new EightBall object
    int SlotChosen;
    
	SetConsoleTextAttribute(hConsole, 0x0C); // Sets The Color To Gray
	cout << "\t Welcome To The Magic EightBall! Where We Tell You Your Future! \n\n";
	SetConsoleTextAttribute(hConsole, 0x0A); // the color green is used
	cout << " Hello,\n\n My Name Is Moses. I Will Assist You, By Telling Your Fortune. \n"
		 << " The Rules Are Simple: A Mininum Of 4 Players Can Play.\n\t However, You Can Choose However Many You Want To Play. \n\n So, Below Please Enter The ";
		SetConsoleTextAttribute(hConsole, 0x0D); // the color magenta is used
		cout << "Number";
		 SetConsoleTextAttribute(hConsole, 0x0A); // the color green is used
	cout << " Of Everyone Playing: ";

	while(!(cin >> TotalPlayerCount))
		{
			cin.clear();
			cin.ignore(numeric_limits<streamsize>::max_digits10, '\n');
			cout << " This Is Incorrect, Try AGAIN! : ";
		}
	cin.ignore();


	
	
	cout << "\n Please Wait As The Game Loads...." << endl;
	Sleep(1000);
	SetConsoleTextAttribute(hConsole, 0x0B); // the color dark cyan is used
	cout << "\n\t\t Alright, The Rules Of This Game Are Simple. \n Press Number 3, Ask A Question,"
	     << " Pass It To The Next Person, Then Continue. \n";
    do
	{
		SetConsoleTextAttribute(hConsole, 0x08); // Sets The Color To Gray

        cout << "\n\n The Magic EightBall \n\n";
        cout << "\t 0 - Pause The Game. \n";
        cout << "\t 1 - Add A EightBall To The Game! \n";
        cout << "\t 2 - Remove A EightBall From The Game! \n";
		cout << "\t 3 - Play The Game. \n";
        cout << "\t 4 - Enable Self-Destruction Mode. \n";
        cout << endl << "\t\t Please Enter Your Choice: ";

        SetConsoleTextAttribute(hConsole, 0x0D); // the color magenta is used

		while(!(cin >> SlotChosen))
		{
			cin.clear();
			cin.ignore(numeric_limits<streamsize>::max_digits10, '\n');
			cout << " This Be Incorrect, Try AGAIN! : ";
		}

		SetConsoleTextAttribute(hConsole, 0x08); // Sets The Color To Gray

        switch (SlotChosen)
        {
            case 0: cout << "\n\t The Game Will Pause... \n\n"; break;
	        case 1: myEightBall.AddPlayer(); ++TotalPlayerCount; break;  
            case 2: myEightBall.RemovePlayer(); break;
			case 3: myEightBall.PlayGame(); break;
            case 4: myEightBall.Clear(); break;
            default: cout << " Fool, What? You Can't Type! \n";
        }
	}
    while (SlotChosen != 0);
    
    return 0;
}
